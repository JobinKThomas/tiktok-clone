[{"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\index.js":"1","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\reportWebVitals.js":"2","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\App.js":"3","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\login.jsx":"4","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\register.jsx":"5","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\addvideo.js":"6","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\video.js":"7","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\kocha.jsx":"8","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\Footer.jsx":"9","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\Sidebar.jsx":"10"},{"size":1003,"mtime":1610004437963,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":509,"mtime":1610021498733,"results":"14","hashOfConfig":"12"},{"size":4952,"mtime":1610036130967,"results":"15","hashOfConfig":"12"},{"size":6233,"mtime":1610036550879,"results":"16","hashOfConfig":"12"},{"size":3656,"mtime":1610037685702,"results":"17","hashOfConfig":"12"},{"size":1090,"mtime":1610035166104,"results":"18","hashOfConfig":"12"},{"size":1072,"mtime":1610036105017,"results":"19","hashOfConfig":"12"},{"size":1234,"mtime":1610035703156,"results":"20","hashOfConfig":"12"},{"size":1387,"mtime":1610024157635,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"zgk3j9",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\index.js",["50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n  \nimport \"semantic-ui-css/semantic.min.css\";\nimport Login from \"./login\";\nimport Register from \"./register\";\nimport Addvideo from \"./addvideo\";\nimport Ginto from \"./kocha\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login}/>\n        <Route path=\"/register\" component={Register}/>\n        <Route path=\"/addvideo\" component={Addvideo}/>\n        <Route path=\"/\" component={App}/>\n        \n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["51","52"],"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\reportWebVitals.js",[],"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\App.js",[],"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\login.jsx",["53","54","55"],"import React, {useState} from \"react\";\r\nimport {Grid, Form, Segment, Header, Button, Message} from 'semantic-ui-react';\r\nimport \"./auth.css\"\r\nimport { Link,useHistory} from 'react-router-dom'\r\n\r\n\r\nconst Login = () =>{\r\n    const history=useHistory()\r\n\r\n    let user ={\r\n        username : \"\",\r\n        password : \"\",\r\n    }\r\n    let errors = [];\r\n    let log=[];\r\n    const [userState, setuserState] = useState(user);\r\n    const [errorState, seterrorState] = useState(errors);\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [logg,setLogg] = useState(log);\r\n    \r\n    const loginuser=()=>{\r\n\r\n        user.username=userState.username\r\n        user.password=userState.password\r\n\r\n        fetch(\"http:///localhost:3000/login\", {\r\n            method: 'POST',\r\n            mode: \"cors\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n    \r\n            },\r\n            body: JSON.stringify(user),\r\n            })    \r\n            .then(response=>response.json())\r\n            .then((response) => {\r\n                if (response.result.status === \"sucess\") {\r\n                    console.log(response.result)\r\n                    console.log('Login Successful');\r\n                    alert(\"Login Successfull\")\r\n                    setIsLogin(true)\r\n                    history.push('/')\r\n                } else {\r\n                    alert(\"Login Failed\")\r\n                    console.log('Login Unsuccessful');\r\n                }\r\n    \r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        \r\n    }\r\n\r\n    const handleInput = (event) =>{\r\n        let target = event.target;\r\n        setuserState((currentState)=> {\r\n            let currentuser = {...currentState};\r\n            currentuser[target.name] = target.value;\r\n            return currentuser;\r\n        })\r\n    }\r\n    // const job = () =>{\r\n    //     if(setIsLogin(true)){\r\n    //         {message:\"login success\"}\r\n    //     }\r\n    //     else{\r\n    //         {message:\"login failed\"}\r\n    //     }\r\n        \r\n    // }\r\n    const checkForm = () => {\r\n        if (isFormEmpty()) {\r\n            seterrorState((error) => error.concat({ message: \"Please fill in all fields\" }));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const isFormEmpty = () => {\r\n        return !userState.password.length ||\r\n            !userState.username.length;\r\n    }\r\n    const formaterrors = () => {\r\n        return errorState.map((error, index) => <p key={index}>{error.message}</p>)\r\n    }\r\n    const onSubmit = (event) => {\r\n        seterrorState(() => []);\r\n        // setIsLogin(false)\r\n        if (checkForm()) {\r\n            // setIsLoading(true);\r\n            // firebase.auth()\r\n            //     .signInWithEmailAndPassword(userState.email, userState.password)\r\n            //     .then(user => {\r\n            //         setIsLoading(false);\r\n            //         console.log(user);\r\n            //     })\r\n            //     .catch(serverError => {\r\n            //         setIsLoading(false);\r\n            //         seterrorState((error) => error.concat(serverError));\r\n            //     })\r\n\r\n        }\r\n    }\r\n     return <Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"grid-form\" >\r\n        <Grid.Column style={{ maxWidth: '500px' }}>\r\n            <Header >\r\n                \r\n                <h2>Login </h2>\r\n            </Header>\r\n            <Form onSubmit={onSubmit}>\r\n                <Segment stacked>\r\n                    <Form.Input\r\n                    name=\"username\"\r\n                    value={userState.username}\r\n                    icon=\"user\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInput}\r\n                    type=\"text\"\r\n                    placeholder=\"User Name\"\r\n                    />\r\n                    \r\n                    <Form.Input\r\n                    name=\"password\"\r\n                    value={userState.password}\r\n                    icon=\"lock\"\r\n                    iconPosition=\"left\"\r\n                    onChange={handleInput}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    />\r\n                    \r\n                </Segment>\r\n                <Button onClick={loginuser}>Login</Button>\r\n            </Form>\r\n            {errorState.length > 0 && <Message error>\r\n                <h3>Errors</h3>\r\n                {formaterrors()}\r\n            </Message>\r\n            }\r\n            {/* {isLogin && <Message sucess>\r\n                <h3>Successfully Loggedin. Please Login to proceed</h3>\r\n            </Message>\r\n            } */}\r\n            {/* <Message >\r\n            {job()}\r\n            </Message> */}\r\n            <Message>\r\n                Not an User? <Link to=\"/register\" >Register </Link>\r\n            </Message>\r\n        </Grid.Column>\r\n    </Grid>\r\n}\r\n\r\nexport default Login ;\r\n","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\register.jsx",[],"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\addvideo.js",["56","57","58"],"import React, {useState} from \"react\";\r\nimport {Grid, Form, Segment, Header, Button, Message} from 'semantic-ui-react';\r\nimport './Footer.css';\r\nimport { Link,useHistory} from 'react-router-dom'\r\n\r\n\r\n\r\nconst Video = () =>{\r\n    const history=useHistory()\r\n\r\n    let vdo ={\r\n        url : \"\",\r\n        // description: \"\",\r\n        // song:\"\", \r\n    }\r\n    let errors = [];\r\n    const [userState, setuserState] = useState('');\r\n    const [errorState, seterrorState] = useState(errors);\r\n    const addVideo=()=>{\r\n        vdo.url=userState.url\r\n      \r\n        fetch(\"http:///localhost:3000/addvideo\", {\r\n            method: 'POST',\r\n            mode: \"cors\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n    \r\n            },\r\n            body: JSON.stringify(vdo),\r\n            })    \r\n            .then(response=>response.json())\r\n            .then((response) => {\r\n                if (response.result.status === \"sucess\") {\r\n                    console.log(response.result)\r\n                    console.log(\r\n                        'Video successfully uploaded'\r\n                \r\n                       \r\n                    );\r\n                    alert(\"video added \")\r\n                    history.push('/')\r\n                } else {\r\n                    console.log('Video uploaded Unsuccessful');\r\n                }\r\n    \r\n            }).catch((error) => {\r\n                console.log(error);\r\n            });\r\n        \r\n    }\r\n    const handleInput = (event) =>{\r\n        let target = event.target;\r\n        setuserState((currentState)=> {\r\n            let currentuser = {...currentState};\r\n            currentuser[target.name] = target.value;\r\n            return currentuser;\r\n        })\r\n    }\r\n    const checkForm = () => {\r\n        if (isFormEmpty()) {\r\n            seterrorState((error) => error.concat({ message: \"Please fill in all fields\" }));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const isFormEmpty = () => {\r\n        return !userState.url.length \r\n    }\r\n    const formaterrors = () => {\r\n        return errorState.map((error, index) => <p key={index}>{error.message}</p>)\r\n    }\r\n    const onSubmit = (event) => {\r\n        seterrorState(() => []);\r\n        if (checkForm()) {\r\n           \r\n\r\n        }\r\n    }\r\n     return <Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"grid-form\" >\r\n        <Grid.Column style={{ maxWidth: '500px' }}>\r\n            <Header >\r\n                \r\n                <h2>Add Video </h2>\r\n            </Header>\r\n            <Form onSubmit={onSubmit}>\r\n                <Segment stacked>\r\n                    <Form.Input\r\n                    name=\"url\"\r\n                    value={userState.url}\r\n                    onChange={handleInput}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter URL\"\r\n                    />\r\n                    {/* <Form.Input\r\n                    name=\"description\"\r\n                    value={userState.description}\r\n                    onChange={handleInput}\r\n                    type=\"text\"\r\n                    placeholder=\"Enter description\"\r\n                    />\r\n                     <Form.Input\r\n                    name=\"song\"\r\n                    value={userState.song}\r\n                    onChange={handleInput}\r\n                    type=\"text\"\r\n                    placeholder=\"Title\"\r\n                    /> */}\r\n                </Segment>\r\n                <Button \r\n                onClick={addVideo}>Add</Button>\r\n            </Form>\r\n            \r\n        </Grid.Column>\r\n    </Grid>\r\n}\r\n\r\nexport default Video ;\r\n","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\video.js",["59"],"\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./video.css\";\r\nimport VideoFooter from './Footer';\r\nimport VideoSidebar from './Sidebar';\r\n\r\nconst Video = ({\r\nurl,\r\n// likecount,\r\n// message,\r\n// share,\r\n\r\nchannel,\r\ndescription,\r\nsongname\r\n}) => {\r\n    const [play, setPlay] = useState(false);\r\n    const videoRef = useRef(null);\r\n  \r\n    \r\n    const onVideoPress = () => {\r\n      if (play) {\r\n        videoRef.current.pause();\r\n        setPlay(false);\r\n      } else {\r\n        videoRef.current.play();\r\n        setPlay(true);\r\n      }\r\n    };\r\n \r\n  \r\n  \r\n    return (\r\n        \r\n       <div className=\"video\">\r\n        <video\r\n          className=\"video__player\"\r\n          loop\r\n          onClick={onVideoPress}\r\n          src={url}\r\n          ref={videoRef}\r\n        />\r\n        <VideoSidebar\r\n                likes={9}\r\n                messages\r\n                shares />\r\n          <VideoFooter\r\n                channel={\"jobin\"}\r\n                description={\"Game \"}\r\n                song={\"GOT\"} />\r\n\r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default Video;\r\n\r\n","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\kocha.jsx",["60","61","62"],"\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Item } from \"semantic-ui-react\";\r\nimport Video from \"./video\"\r\n\r\n\r\n\r\n//import \"./video.css\";\r\n\r\nconst Ginto = () => {\r\nvar [videourl,setvideos]=useState()\r\n\r\n\r\nuseEffect(()=>{\r\n    fetch(\"http://localhost:3000/videos\", {\r\n      method: 'GET',\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n\r\n      },\r\n     \r\n      })    \r\n      .then(response=>response.json())\r\n      .then((response) => {\r\n            setvideos(response)\r\n            console.log(response)\r\n            console.log(videourl)\r\n    \r\n       })\r\n      .catch((error) => {\r\n          console.log(error);\r\n      });\r\n  },[])\r\n    return (\r\n      <div >\r\n          <ul>\r\n              {videourl && videourl.map(item=>(\r\n                    <Video\r\n       url={item.url}\r\n       share={item.sharecount}\r\n       channel={item.channel}\r\n       />\r\n       \r\n              ))}\r\n          </ul>\r\n          \r\n          \r\n      </div>\r\n    );\r\n\r\n  };\r\n  \r\nexport default Ginto;\r\n\r\n\r\n\r\n","C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\Footer.jsx",["63"],"import React from 'react';\r\nimport './Footer.css';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport MusicNoteIcon from '@material-ui/icons/MusicNoteOutlined';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Ticker from 'react-ticker';\r\nfunction VideoFooter({ channel, description, song }) {\r\n    return (\r\n        <div className=\"videoFooter\">\r\n            <div className=\"videoFooter__text\">\r\n                <h3>@{channel}</h3>\r\n                <p>{description}</p>\r\n                <div className=\"videoFooter__ticker\">\r\n                    <MusicNoteIcon className=\"videoFooter__icon\" />\r\n                    <Ticker mode=\"smooth\">\r\n                        {({ index }) => (\r\n                            <>\r\n                                <p>{song}</p>\r\n                            </>\r\n                        )}\r\n                    </Ticker>\r\n                    <AddCircleIcon className=\"videoFooter_add\"/>\r\n\r\n                </div>\r\n            </div>\r\n            <img\r\n                className=\"videoFooter__record\"\r\n                src=\"https://static.thenounproject.com/png/934821-200.png\"\r\n                alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoFooter",["64","65"],"C:\\Users\\jobin\\internship\\React\\jobin\\tik-front\\tik-front\\src\\Sidebar.jsx",[],{"ruleId":"66","severity":1,"message":"67","line":12,"column":8,"nodeType":"68","messageId":"69","endLine":12,"endColumn":13},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":18,"column":12,"nodeType":"68","messageId":"69","endLine":18,"endColumn":19},{"ruleId":"66","severity":1,"message":"75","line":19,"column":12,"nodeType":"68","messageId":"69","endLine":19,"endColumn":16},{"ruleId":"66","severity":1,"message":"76","line":19,"column":17,"nodeType":"68","messageId":"69","endLine":19,"endColumn":24},{"ruleId":"66","severity":1,"message":"77","line":2,"column":46,"nodeType":"68","messageId":"69","endLine":2,"endColumn":53},{"ruleId":"66","severity":1,"message":"78","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":14},{"ruleId":"66","severity":1,"message":"79","line":71,"column":11,"nodeType":"68","messageId":"69","endLine":71,"endColumn":23},{"ruleId":"66","severity":1,"message":"80","line":2,"column":17,"nodeType":"68","messageId":"69","endLine":2,"endColumn":26},{"ruleId":"66","severity":1,"message":"81","line":2,"column":28,"nodeType":"68","messageId":"69","endLine":2,"endColumn":34},{"ruleId":"66","severity":1,"message":"82","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":34,"column":5,"nodeType":"85","endLine":34,"endColumn":7,"suggestions":"86"},{"ruleId":"66","severity":1,"message":"87","line":3,"column":8,"nodeType":"68","messageId":"69","endLine":3,"endColumn":26},{"ruleId":"70","replacedBy":"88"},{"ruleId":"72","replacedBy":"89"},"no-unused-vars","'Ginto' is defined but never used.","Identifier","unusedVar","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"'isLogin' is assigned a value but never used.","'logg' is assigned a value but never used.","'setLogg' is assigned a value but never used.","'Message' is defined but never used.","'Link' is defined but never used.","'formaterrors' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'Item' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'videourl'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'FavoriteBorderIcon' is defined but never used.",["90"],["91"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [videourl]",{"range":"95","text":"96"},[717,719],"[videourl]"]